Documentation for computational geometry routines
Jessica Sanders, Duke University

The scripts in comp_geo take a mesh (of the form x,y,numnod,numele,node), and a set of points, p, which define a set of interface lines, and returns a mesh in a form acceptable to the XFEM code.  
Voronoi tessellation is used to define the grain domains and interfaces in this case.

The variable "p" is 2 x (number of grains).  p(i,j) gives the ith component of the center of grain j.  Voronoi tessellation works by creating cells around a set of points such that  the boundaries are equidistant from the two nearest sites.  The Voronoi routine produces the end points of n straight line segments.  vx(1:2, j) are the x-coordinates of the 2 endpoints of the jth line segment.

The basic mesh is generated either by loading a mesh file, or calling a meshing script (structured.m or unstruct.m)  The variable "p" is defined either by calling the scripts vdata.m and vdata_multi.m (in which the user defines the points), or commenting out those calls and putting in the points by hand.

The XFEM mesh needs to have the the following variables, which are generated by the routine given x,y,numnod,numele,node,p.  They define the mesh, the interface, and the subelements that exist around the interface, as well as some of the relational information between elements and their subelements:

x
y
node 
X 
Y 
CONN 
ELEMINFO_ARR 
NODEINFO_ARR 
SUBELEMENT_GRAIN_MAP 
beam_h 
beam_l 
cutlist 
elemgrainmap 
maxngrains...
nodegrainmap 
numele 
numnod 
p 
vx 
vy 
INT_INTERFACE 
PARENTELEM_INFO
SUBELEM_INFO

I generally save the variables to a *.mat file and copy that file to the XFEM directory.  

Several finished meshes already exist in the directory:  Essentially, anything with the format *.mat.  The files cmulti*.mat are contain only standard meshes, which are the comparisons for the XFEM meshes multi*.mat.

When an XFEM mesh is loaded in the workspace, either by loading one of the *.mat files or running the script, it can be viewed with the script:

num_sub_elems = length(SUBELEMENT_GRAIN_MAP)
plotsubmesh

The interface(s) can be plotted with


hold on
plot(vx,vy,'-r')

extra interfaces that do not intersect the mesh do not affect computations
