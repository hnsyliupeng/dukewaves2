This is the README file for XFEM2D with lagrange multiplier enforcement of continuity at interfaces, and possible sliding.
Jessica Sanders, Duke University, 2010

There is a two step process to running the extended finite element method in these routines, given that you have an XFEM mesh file with the format *.mat

1) Preprocessing.  

The XFEM mesh, *.mat, should be generated by the routines from comp_geo and will inlcude only geometric data.  Preprocessing adds information about material models and boundary conditions.  The folder preprocess/ contains the scripts for preprocessing.  The main script is preprocess.m  It loads an XFEM mesh, adds additional information, and then saves a new file, **.mat, which can be read by the main XFEM routines. 

2) Main computation

In the main directory are the scripts for an XFEM computation.  The main script is beam.m

An index of key variables for these routines is given in variables.pdf

The basic outline:

a)  Determine which nodes need to be enriched, and with which "heaviside".

b)  Create an ID array for the global system, adding the enriched degrees of freedom 

c)  Assemble the stiffness by looping over the elements.  The local stiffness matrices for uncut elements, both with and without enriched dofs, is done with elemstiff_class.m The local stiffness matrices for cut elements are claculated with a recursive routine that loops and integrates over all subelements of a cut element.

d)  Apply constraints at the enriched interfaces using Lagrange multipliers.  This loops over every element, gets a segment of the gloal interface associated with that element, calculates local constraint equations, and then assembles them into the global system. For non-sliding cases, the same constraint equations are used in x and y.  For sliding, the constraint equations are dotted with the interface normal.

e) Treat Dirichlet boundary conditions on enriched nodes:  best not to use until this is cleaned up.

f) Enforce Dirichlet boundary conditions on unenriched nodes.  The technique is the standard FEM technique.  

g) Solve for the solution vector.  The solution vector, fdips, is NOT the set of nodal displacements.  It is reassmebled into nodal displacements, disp.

e) Calculate stresses:  This uses the standard process via "disp". It is not completely accurate for cut elements, as they possibly have 2 stresses, but only one average stress is calculated.  

3)  Other post-processing routines exist in the directory:

showmesh
showdeform
showdeform2
xx_stress
error_norm*.m  -- These are routines for calculated the error norms assuming you know the solution and it is stored in analytical.m (displacement) or analytical_eng.m (stress)  I'm not sure if they work yet 4/15/2010.

lag_trac - This is a routine for calucating and visualizing the multiplier field, or traction, on the interface.  I'm not sure if it works yet 4/15/2010.  

Other routines in the folder:

solution.m generates the analytical solution given in analytical.m in such a way that it can be visualized by the previous routines.    
